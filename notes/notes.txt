////////////// ENTREVISTA TECNICA AVANTI /////////////////////

Curso da ADA Tech desenvolvimento WEB com JAVA => Com mais de 300 horas e certificado, nivel nacional.

Na OSF digital tive a oportunidade de trabalhar com um time global, usando ingl√™s diariamente,
Utilizavamos ferramentas como JIRA, Slack, 
SCRUM todas as semanas, daylies com meu mentor;



REVISAR O PROJETO;


SOLID => 
Single Responsability => 
Open-Closed =>
Liskov Substitution =>
Interface Segregation =>
Dependency Inversion =>


Meus estudos mais recentes => AWS, C# com unity;
Github / 

Estudar mais sobre React e VTEX;

////// VTEX ///////

√â uma plataforma de Ecommerce SaaS que permite a cria√ß√£o de lojas virtuais;

Existem duas principais vers√µes: 
- VTEX Legacy: Utiliza HTML, CSS, JavaScript e jQuery diretamente no CMS da plataforma.
    A customiza√ß√£o √© feita em arquivos .json, .js, .css, .html dentro do painel da loja.
    Ainda muito usado, especialmente em projetos antigos.
- VTEX IO: Framework moderno baseado em React e TypeScript.
    Utiliza o VTEX Toolbelt (CLI) para deploy, testes e desenvolvimento local.
    Trabalha com blocos (blocks.json) e schemas configur√°veis.
    Uso de Store Framework: permite configurar vitrines e componentes com pouca ou nenhuma programa√ß√£o.


Ferramentas:
VTEX IO CLI: ferramenta para rodar projetos localmente e fazer deploy.
React (com VTEX IO): usado na cria√ß√£o de componentes personalizados.
GraphQL: utilizado para consultas de dados na plataforma.
Node.js: em algumas customiza√ß√µes e integra√ß√µes.
CMS VTEX: utilizado principalmente no Legacy para editar p√°ginas, banners, menus, etc.


OBS:
Blocos e Schemas: em VTEX IO, as p√°ginas s√£o formadas por blocos configur√°veis declarados em JSON.


Perguntas:

////// Sobre meu C√≥digo do desafio /////

A ideia do desafio da Landing Page era deixar o c√≥digo mais modular, quis passar uma ideia de componentiza√ß√£o assim como √© feito no React, deixando o c√≥digo mais modular, mais f√°cil de se fazer manuten√ß√£o, al√©m de reutiliz√°vel, at√© gerei uma p√°gina example.html para mostrar o qu√£o f√°cil seria montar uma p√°gina utilizando essa ideia de componentes;
Ent√£o eu coloquei o HTML em arquivos externos √† minha p√°gina .html principal e criei Loaders que teriam essa responsabilidade de injetar o HTML no c√≥digo - TODO: VERIFICAR SE INJETAR HTML √â O TERMO CORRETO - ;

O Segundo projeto foi mais simples, j√° que se poderia usar React eu aproveitei a componentiza√ß√£o...
Gerei um useContext para facilitar - TODO: estudar o useContext e seus usos - 


////// Simula√ß√µes //////

CSS Handles => S√£o classes CSS predefinidas expostas pelos blocos e componentes VTEX IO. Eles funcionam como "ganchos" (handles = al√ßas) para que voc√™ consiga aplicar estilos customizados sem alterar a estrutura do componente.;
    CSS Handles s√£o a maneira oficial da VTEX IO permitir que voc√™ estilize seus componentes de forma modular, segura e limpa.


    üìå Exemplo pr√°tico:
    Imagine que voc√™ tem um componente product-summary e quer mudar a cor do nome do produto.

    json
    {
    "product-summary": {
        "props": {
        "handles": ["customProductName"]
        }
    }
    }
    No seu CSS:

    css
    .customProductName {
    color: red;
    font-weight: bold;
    }

    Voc√™ estar√° estilizando o nome do produto usando o handle exposto pelo componente.

    üìÅ Onde escrever os estilos?
    Voc√™ cria um arquivo CSS no seu app, normalmente:
    /styles/yourStyles.css

    E o importa no manifest.json com:
    json
    "styles": "styles/yourStyles.css"


1. Voc√™ j√° trabalhou com React? O que √© um componente em React e qual a diferen√ßa entre componentes funcionais e de classe?

Sim, j√° trabalhei com React em projetos pessoais e acad√™micos. Um componente √© uma fun√ß√£o ou classe que retorna uma interface de usu√°rio (UI). A principal diferen√ßa √© que componentes de classe usam this e ciclos de vida como componentDidMount, enquanto os funcionais s√£o mais simples e hoje, com hooks como useState e useEffect, podem fazer tudo que uma classe faz, de forma mais enxuta.



2. Por que a performance do site √© t√£o importante em e-commerce? Como voc√™ melhoraria o carregamento de uma p√°gina?

A performance √© crucial porque impacta diretamente na convers√£o de vendas e na experi√™ncia do usu√°rio. Se um site demora a carregar, o cliente pode desistir da compra. Para melhorar o carregamento, usaria t√©cnicas como lazy loading de imagens, minifica√ß√£o de arquivos, otimiza√ß√£o de fontes e uso de cache. Em VTEX, √© importante tamb√©m usar corretamente os blocos e evitar sobrecarregar as p√°ginas com muitos scripts desnecess√°rios.



3. O que s√£o Props e State em React?

Props s√£o dados passados de um componente pai para um filho, como par√¢metros. J√° o state √© o estado interno do componente, controlado por ele mesmo. Por exemplo, posso passar via props o nome de um produto e controlar no state se ele est√° em destaque ou n√£o.



4. Voc√™ conhece o VTEX IO? Como ele organiza o layout da loja?

Sim, o VTEX IO usa o conceito de blocos para montar o layout da loja. Cada se√ß√£o da p√°gina √© um bloco, que pode ser configurado no store.theme. Os blocos podem ser nativos ou personalizados, e a estrutura do site √© declarada em JSON ou no formato blocks.json via React, com o uso de CSS Handles para customiza√ß√£o visual.



5. O que √© GraphQL e como ele se diferencia do REST?

O GraphQL √© uma linguagem de query para APIs que permite ao cliente pedir exatamente os dados que precisa. Diferente do REST, que tem endpoints fixos, o GraphQL centraliza em um √∫nico endpoint e o cliente especifica os campos que quer. Isso economiza dados e melhora a performance.



6. Como adicionar um banner promocional em uma p√°gina da VTEX?

Em um projeto VTEX IO, criaria um bloco com o tipo image ou rich-text, configuraria as props no JSON, como src, href, alt, e colocaria esse bloco na p√°gina desejada via a declara√ß√£o de store.home ou outro template no blocks.json.



7. O que √© CSS Handles e como ele √© usado na VTEX?

CSS Handles s√£o nomes de classes pr√©-definidas nos componentes da VTEX IO. Podemos sobrescrev√™-las nos nossos arquivos CSS para customizar a apar√™ncia sem alterar a l√≥gica do componente. √â uma forma de aplicar estilo de maneira controlada.



________________________________________________________________________________________________________________________________________
Parte 2 ‚Äì Respostas Comportamentais
1. Por que voc√™ quer fazer parte da nossa empresa?

Acredito que a empresa tem uma forte atua√ß√£o no mercado digital e trabalhar com VTEX √© uma √≥tima oportunidade de aprender na pr√°tica como grandes e-commerces funcionam. Quero crescer com uma equipe experiente e contribuir com meu aprendizado em front-end e minha vontade de evoluir.

2. Como voc√™ lida com situa√ß√µes em que n√£o sabe como resolver um problema t√©cnico?

Primeiro, tento investigar por conta pr√≥pria, usando documenta√ß√£o oficial e fontes confi√°veis. Caso n√£o resolva, pe√ßo ajuda ao time, explicando o que j√° tentei. Acredito que saber quando pedir ajuda √© essencial para n√£o travar o andamento do projeto.

3. J√° trabalhou em equipe? Como foi a experi√™ncia?

Sim, j√° trabalhei em equipe em projetos acad√™micos e pessoais. Gosto de colaborar e acho importante dividir tarefas de forma clara e manter a comunica√ß√£o aberta. Sempre que posso, tento ajudar outros membros com o que sei.

4. Me fale de um projeto pessoal ou acad√™mico que te deixou orgulhoso.

Um projeto que me marcou foi um sistema de aluguel de ve√≠culos que criei usando Java e arquivos para persist√™ncia. Organizei todo o CRUD, controle de loca√ß√£o e regras de neg√≥cio. Foi desafiador, mas aprendi muito sobre l√≥gica, organiza√ß√£o de c√≥digo e boas pr√°ticas.

5. Se voc√™ estivesse com prazo apertado e encontrasse um bug inesperado, o que faria?

Avaliaria a gravidade do bug e tentaria resolv√™-lo rapidamente. Caso n√£o consiga sozinho, comunicaria o time e sugeriria uma solu√ß√£o provis√≥ria ou ajuste no escopo, sempre pensando no impacto e em manter a entrega alinhada com a prioridade do projeto.