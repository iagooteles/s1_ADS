///////////////////// Processos de requisitos e estudos de viabilidade ///////////////////////////////////////

Processo => Conjunto de atividades de trabalho, ações e tarefas realizadas quando algum aterfato de software deve ser criado.

Uma metodologia de processo genérica para engenharia de software compreende 5 atividades:

Comunicação; => Planejamento; => Modelagem; => Construção; => Entrega;

O fluxo de processo de software descreve como são organizadas as atividades metodológicas, bem como as ações e tarefas que ocorrem dentro de cada atividade em relação à sequencia e ao tempo

- Fluxo linear => Executa cada uma das cinco atividades em sequência;
    comunicação -> planejamento -> modelagem -> construção -> entrega
- Fluxo iterativo => Repete uma ou mais atividade antes de seguir para a seguinte;
    comunicação <-> planejamento <-> modelagem <-> construção -> entrega
    OBS: Também pode-se ir de modelagem para comunicação, pode repetir-se, pode ir de construção para comunicação/ planejamento; etc....
- Fluxo de processo evolucionário => executa as ativades de forma circular, cada volta pelas cinco atividades conduz uma versão mais completa do software;
    comunicação -> planejamento -> modelagem -> construção -> entrega -> comunicação -> planejamento -> .......
- Fluxo de processo paralelo => executa uma ou mais atividades em paralelo com as outras;
    Difícil de apresentar aqui por arquivo .txt kkkkk, mas a ideia é exatamente essa que uma atividade pode ser executada ao mesmo tempo que outra;

Modelos de ciclo de vida de software:

MODELO CASCATA - sugere uma abordagem sequencial e sistemática para o desenvolvimento de software:
    comunicação (especificação dos requisitos do cliente) -> planejamento (estimativas, cronograma) -> modelagem (análise, projeto) -> construção (código, testes) -> entrega (disponibilização)

    Um dos modeloas mais antigos, e ainda um dos mais usados;
    Fixa pontos específicos para a entrega de artefatos;
    simples e facil de aplicar;
    pressupõe que os requisitos ficarão estáveis, logo, qualquer mudança durante o curso do projeto acarretaria em problemas para a continuação do projeto;
    atrasa a redução de riscos;

MODELO EM 'V' - O modelo em V começa com: Uma evolução do modelo cascata, onde cada fase de desenvolvimento tem uma fase correspondente de teste. O processo forma um "V".
    Modelagem de requisitos -> projeto de arquitetura -> projeto de componente -> geração de código;
    Ao terminar o código, começa-se os testes, meio que de trás de frente;
    Teste de unidade -> Vai testar a geração de código;
    Teste de integração -> vai testar o projeto de componente;
    Teste de sistema -> testa o projeto de arquitetura;
    teste de aceitação -> testa se o sistema está de acordo com a modelagem de requisitos;

MODELO RUP - Metodologia iterativa e orientada a objetos, criada pela IBM. O desenvolvimento ocorre em ciclos de iteração até a entrega final.
MODELO RAD (Rapid application development) - Foca no desenvolvimento rápido de aplicações, com prototipagem rápida e feedback constante do usuário.

MODELO INCREMENTAL - Combina os fluxos de processo linear e paralelo dos elementos; Aplica sequencias lineares de forma escalonada, à medida que o tempo vai avançando;
    incremento nº 1 -> ... -> .... -> .... -> Entrega do incremento 1
        incremento nº 2 -> ... -> .... -> .... -> Entrega do incremento 2
            incremento nº 3 -> ... -> .... -> .... -> Entrega do incremento 3
    _______________________________________________________________________> Cronograma do projeto


    Testes e integração são realizados desde o início, de forma contínua;
    Permite feedback dos usuáriso desde cedo
    Foco em curto prazo;
    Implementações parciais podem ser implantadas;
    Antecipa a resolução de riscos;

MODELO EVOLUCIONÁRIO - São iterativos, apresentam características que possibilitam desenvolver versões cada vez mais completas do software; Os modelos mais comuns são: Prototipação e modelo espiral;
    Adaptam-se bem às mudanças e incertezas sobre os requisitos do software;
    A cada nova iteração, o produto evolui;

    MODELO ESPIRAL - 
        Foi criado visando abranger as melhores características do modelo clássico e da prototipagem;
        A cada ciclo do espiral, versões progressivamente mais completas do software são construídas;
        Antes de cada ciclo, uma análise de riscos é feita;
        Ao fim de cada ciclo é feita uma avaliação se deve-se prosseguir para o próximo ciclo;

    PROTOTIPAÇÃO - 
        Utilizado quando são muitas incertezas sobre a solução a ser criada, assim o protótipo podem ser descartáveis;
        Devem reutilizar componentes e ferramentas para produção rápida;
        Foca na produção de algo a ser apresentado para os stakeholders;
        Protótipos contribuem para melhorar a qualidade da especificação dos futuros programas, o que leva à diminuição dos gastos com manutenção;
        O treinamento dos usuários pode ser feito antes do produto ficar pronto;
        Partes do protótipo podem ser usadas no desenvolvimento do sistema final;

        Em geral, o grande argumento contra a construção do protótipo é o custo;

MODELOS CONCORRENTES - possibilita a equipe de software representar elementos concorrentes e iterativos de qualquer um dos modelos de proceso já descritos;
    diferentes atividades do desenvolvimento ocorram em paralelo.

MODELO ESPIRAL - Combina elementos do modelo cascata e do modelo iterativo, priorizando gestão de riscos.

PROTOTIPAÇÃO - Foca na criação de protótipos funcionais antes do desenvolvimento final. Isso permite testar ideias e obter feedback cedo.

O objetivo da engenharia de requisitos é produzir um documento que especifica o sistema a ser desenvolvido satisfazendo os requisitos das partes interessadas. Geralmente apresentados em dois níveis de detalhes: alto nível para usuários finais e clientes; e baixo nível (mais detalhado) para os desenvolvedores.

▪ Descrever as principais atividades da engenharia de requisitos.
▪ Introduzir técnicas para a elicitação e análise de requisitos.
▪ Descrever validação de requisitos.
▪ Discutir o gerenciamento de requisitos

Estudo de viabilidade => Um levantamento de quais necessidades do usuário podem ser atendidas utilizando as tecnologias atuais; o estudo em si deve ser barato e rápido, considera se o sistema proposto será rentável do ponto de vista empresarial e se pode ser desenvolvido dentro das restrições orçamentárias existentes;
    - é mais viável desenvolvermos um novo sistema ou usarmos um já existente no mercado?
    - Quais são os riscos envolvidos no projeto?
    - O sistema proposto contribui para a organização?
    - O que o cliente quer?
    - Analisando as condições econômicas, organizacionais e temporais é viável desenvolver o sistema?

O estudo de viabilidade representa o início do processo de engenharia de requisitos; Ele tem como entrada os requisitos do negócio, um esboço da descrição do sistema e como o sistema pretende apoiar os processos de negócios;

O estudo da Viabilidade econômica é muitas vezes o mais crítico;
A análise de custo-benefício apresentam 3 técnicas principais:
- Análise do retorno financeiro (payback analysis) => é um indicador financeiro que representa o tempo de retorno de um investimento; usado para medir quanto tempo leva para recuperar o dinheiro investido em um projeto;
    payback simples;
    payback descontado => leva em consideração a taxa de juros e a correção monetária;
- retorno do invertimento (return on investments) => permite saber quanto dinheiro a empresa perde ou ganha com os investimentos feitos em diferentes canais; Com ele é possível identificar quais investimentos valem a pena e como otimizar aqueles que já estão funcionando;
- Valor presente líquido (net present value) =>  é uma forma de avaliar se um determinado investimento, projeto ou negócio será rentável ou não. Essencialmente, o NPV é a soma de todos os fluxos de caixa futuros ao longo do período investido usando uma apropriada taxa de desconto.
    Projetos com NPV positivo valem a pena o investimento, enquanto negativos não.
    Para aplicá-lo na prática, é necessário saber o tempo e a soma total dos fluxos de caixa do investimento descontados a uma taxa pelo menos igual ao mínimo de retorno aceitável;

Validação de requisitos => Os requisitos são analisados quanto ao seu realismo, consistência e integridade. Durante a análise, erros no documento de requisitos são descobertos e corrigidos;























