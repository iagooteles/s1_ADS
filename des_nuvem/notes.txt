//////////////// Aula 1 ////////////////

Cloud computing => é um modelo computacional que permite acesso, sob demanda e através da rede(comumente a internet), a um 'pool' de recursos computacionais (redes, servidores virtuais ou físicos, armazenamento, aplicações e serviços) que podem ser rapidamente provisionados.

Características essenciais => 

- Serviço self-service e sob demanda: Um consumidor de um serviço de nuvem pode requisitar automaticamente um recurso computacional;

- Elasticidade: O consumidor do serviço pode requisitar dinamicamente + ou - recursos para sua aplicação para se adaptar a demanda dos seus usuários;
      Há duas formas de fazer essa elasticidade:
      - Horizontal: Aumenta ou diminui a quantidade de recursos;
      - Vertical: Fazer um upgrade da máquina que já está sendo utilizada;

      AutoEscabilidade ou AutoScaling: O serviço monitora as máquinas virtuais e pode-se adicionar ou remover máquinas virtuais de acordo com as parametrizações, pode-se limitar a quantidade de máquinas utilizadas;

- Pagamento pelo uso e garantias de serviço (SLAs): Os consumidores pagam aos provedores de serviço de nuvem de acordo com o consumo efetuado, o provedor pode, por exemplo, garantir uma disponibilidade de 99.9%;
      SLA - Service Level Agreements;

- Acesso ubíquo através da rede: Padrões Api's REST baseados em HTTP ou SOAP;

Motivação => 

Exemplos de sucesso =>

Tipos de nuvem => 

- Infra as a Service (IaaS): oferece máquinas de capacidade diferentes a preços variados: 
Facilidade de uso: mais complexo que o PaaS e o SaaS;
Flexibilidade: mais flexível, você faz as suas configurações da forma que quiser;
ex: EC2 da Amazon, Máquinas virtuais;

- Plataform as a Service (PaaS): Oferece uma plataforma na nuvem para desenvolver aplicações;
ex: Heroku, Netlify => Plataformas que ajudam o desenvolvedor a colocar sua aplicação na nuvem;

- Software as a Service (SaaS): EX: Salesforce.com => oferece diversas aplicações como serviço na sua própria infra-estrutura de nuvem; Softwares de pratileira que foram pra nuvem;
Facilidade de uso: mais fácil de usar;
Flexibilidade: menos flexível;
ex: microsoft office, github;

Virtualização => Oferecida por um software chamado Hypervisor; Hypervisor é a tecnologia que permite a ideia de virtualização de servidores; 
EX: VMWare, Xen, KVM;

Modelos de implantação => 

- Nuvem pública: a infraestrutura de nuvem fica disponível para o público geral através da internet;

- Nuvem privada: Os recursos computacionais são oferecidos somente para a empresa específica;

- Nuvem híbrida: Composta de duas ou mais núvens (publica e privada por exemplo) - Comum em empresas que já tinham feito investimento em datacenters;

- Nuvem comunitária: Grupo de empresas que teriam uma nuvem comunitárias; empresas dividindo uma mesma nuvem, mas com um gerenciamento; não rendeu muito...;

///////////////// Amazon //////////////

usuário root => O próprio criador da conta;
pesquisar como começar a usar amazon;
'amazon ec2 nivel gratuito';
criar uma maquina -> deletar -> repetir;

ec2 -> instancias -> executar uma instancia;
recomendável dar um nome;
verificar se a maquina que vc escolher é qualificavel para o nivel gratuito; sugestão -> 'amazon linux'

par de chaves -> prosseguir sem par de chaves;
permitir trafego ssh
permitir trafego https da internet
permitir trafego http da internet



após as configs => executar instancia;
conectar o ssh => vai abrir uma nova aba com o terminal;

Exercício: criar uma instancia EC2 e instalar apache usando comando linux e testar a pagina inicial do apache no browser;

1. logar na aws;
2. no menu principal ir para 'ec2';
3. clicar em 'executar instancia';
4. observar as configurações, colocar tudo gratuito;
      não selecionar par de chaves para ter uma configuração mais rápida; o par de chaves melhora a segurança, mas para testes rapidos não são necessários;
5. marcar http e https para criar um servidor web(opcional);
6. verificar se a maquina foi criada com sucesso;
7. conectar-se à instancia;
8. instalar o servidor web Apache: 
      sudo yum install -y httpd
9. fazer o start do servidor:
      sudo systemctl start httpd
10. testar o servidor pelo ip publico ou dns;

Dos passos anteriores, como mudar a pagina html mostrada => 
Passo 11 - substitua o site anterior por uma pagina simples criada por você
11.1) Digite o comando: sudo su para ter privilégios de edição
11.2) Navegue para o diretório da página principal: cd /var/www/html
11.3) Use o editor para criar um arquivo: nano index.html
11.4) Copie o cole o HTML simples a seguir:
<html><body>Meu primeiro site no EC2 </body></html>
Salve o arquivo no editor
11.5) caso o arquivo tenha sido salvo teste novamente o acesso pelo
browser que a página principal deve ter sido trocada pelo novo site
simples.


APACHE => 


EC2 => Elastic Compute Cloud => Serviço de máquina virtual, serviço do tipo IaaS => ;

Modelos de precificação do serviço EC2 - 
      on demand - + Flexibilidade; sob demanda; + aconselhavel quando não se tem uma previsão sob a demanda; É associado ao auto-scaling;
      savings plan - Faz um compromisso com o provedor que aquela máquina vai ser utilizada por um longo prazo, em contrapartida é dado um desconto considerável no valor da hora da máquina;
      spot - funciona como um mercado, onde o preço da máquina é variavel; funciona como uma espécie de leilão; possível de se usar um recurso muito mais barato do que o preço que se teria pela mesma máquina e fosse on demand;


//////////////////////////////////////////////////

Colocar arquivos no ec através do bucket (s2)

passo 1: criar um bucket para armazenar os arquivos do site => Escolher serviço S3 no console do AWS;

criar o bucket;
dar o nome e deixar as outras opções padrão;
escolher o bucket e clicar em carregar;
copiar todos os arquivos para o bucket e aguardar o upload;

passo 2: Criar a função em IAM
clicar em funções na lateral esquerdar e no botão criar função;

selecionar serviço aws e caso de uso: EC2;
Na tela de adicionar permissoes abaixo faça uma busca por s3 e escolha a opção marcada em azul (amazon s3 full access);
Dê o nome e crie a função;

Passo 3: Escolha Ec2 e execute a instância;
Faça as configurações e em Detalhes avançados selecione a função pelo nome que você criou;
Crie a máquina e conecte-se;

Instalar apache: sudo yum install -y httpd
Start no apache: sudo systemctl start httpd
teste o servidor pelo seu ip público;

Passo 4: Substituir o site anterior pelo seu site através da função;

4.1) Digite o seguinte comando para ter privilégios de edição: sudo su
4.2) Navegue para o diretório da página principal: cd /var/www/html
4.3) copiar todos os arquivos e diretorios recursivamente do bucket que vc criou. Use o comando abaixo:
aws s3 cp s3://"nomedasuafunção" . --recursive

Testar novamente a página;

//////////////////////////////// Revisão //////////////////////////////////////////////

Computação em nuvem é um modleo computacional que permite o acesso, sob demanda e através da rede, a um 'pool' de recursos computacionais (redes, servidores virtuais ou físicos, armazenamento, aplicações e serviços) que podem ser rapidamente provisionados;

Elasticidade - Criar e remover recursos;

comandos:

- sudo yum install -y httpd => serve para instalar o apache;
- sudo systemctl start httpd => serve para startar o apache;
- aws s3 cp s3 :://nomeDoBucket . --recursive => Recursivamente pq vai baixar todas as pastas, subpastas e arquivos;

Serviços AWS => 

- EC2: Elastic Computing Cloud: Máquina virtual; 
- S3: Armazenamento/storage => utilizamos para armazenar o site e subimos o site na máquina virtual; têm-se 5 gb no modo gratuito;
- IAM: Serviço de Identidade e Acesso => Liberar o acesso ao S3 pelo EC2;

AWS certified cloud practitioner;


OBS: Perguntar ao prof sobre arquivos .env => eles são enviados ao amazon quando quero subir um site?;


/////////////////////////////////// Avaliação //////////////////////////////////////////


Criar uma máquina virtual na Nuvem (AWS ou OCI). Na VM criada instalar o Apache, colocar o mesmo para rodar e acessar sua página de teste pelo Browser. Usar o editor nano para criar uma página simples e efetuar a mudança para que o IP do EC2 mostre essa página no navegador (5,0 pontos pra quem usar AWS e 10,00 para Oracle Cloud).

1 - No console, selecionar: EC2 => Executar instancia;

2 - Opções da instância: 
      Nome: Nomear instancia;
      App: Amazon Linux aws;
      Instancia: t2.micro => free;
      Key pair (login): proceed without a key pair;
      NetWork setings: Allow HTTPS / HTTP;
      Storage: não mexer;
      => Launch instance => Connect to instance => Connect;

3 - Instalar e rodar Apache:
      sudo yum install -y httpd   ;
      sudo systemctl start httpd  ;
      => Se testar com o public id deve retornar it works;

4 - Editar com nano:
      sudo su           ;
      cd /var/www/html  ;
      nano index.html   ;

      <html><body>Meu primeiro site no EC2 </body></html>

      ctrl + x => yes => enter => Para salvar as edições no nano;


Usar o S3 para hospedar um site ou aplicação (diferente do usado em sala de aula) e permitir seu acesso a partir de uma função definida no IAM para uma máquina virtual. Baixar e configurar a aplicação para a instância do EC2 e mostrar ela funcionando no browser. (5,0 pontos).


1 - Criar um bucket no S3; => arrastar todos os arquivos do template para o bucket;

2 - Criar permissão no serviço IAM; => roles => create role => use case: EC2 => next => Procurar por 'S3' e marcar AmazonS3FullAccess; =>
      Com o IAM criado, é possível modificar o EC2 já existente => actions => security => modify IAM role;
      OU 
      Pode-se criar uma nova instancia EC2;

3 - Substituir o site anterior pelo template => 
      sudo su
      cd /var/www/html
      aws s3 cp s3://'nomeDoBucket'/ . --recursive



